<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">


<!-- 	La base de datos se va a conectar mediante JNDI (no mediante JDBC) -->
	<jee:jndi-lookup jndi-name="jdbc/spring" id="dataSource"
		expected-type="javax.sql.DataSource">
	</jee:jndi-lookup>
	
<!-- 	Habilita anotaciones de inyección de dependencias de Spring -->
	<context:annotation-config></context:annotation-config>
	
<!-- 	Las clases a escanear con Autowired están en com.damian.dao -->
	<context:component-scan base-package="com.damian.dao"></context:component-scan>
	
	
	<!-- spring jdbc template -->
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
<!-- 	Hibernate trabaja con sesiones y esta es la fábrica de sesiones -->
<!-- 	<bean id="sessionFactory" -->
<!-- 		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"> -->
<!-- 		<property name="dataSource" ref="dataSource"></property> -->
<!-- 		<property name="packagesToScan" value="com.damian.pojo"></property> -->
<!-- 		<property name="hibernateProperties"> -->
<!-- 			<props> -->
<!-- 				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop> -->
<!--  				para que se utilice JPA para actualizar las tablas -->
<!-- 				<prop key="hibernate.hbm2dll.auto">update</prop> -->
<!-- 				<prop key="hibernate.show_sql">true</prop> -->
<!-- 			</props> -->
<!-- 		</property> -->
<!-- 	</bean> -->

	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>
